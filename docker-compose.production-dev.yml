version: '3.8'

services:
  # Database - PostgreSQL with SSL
  postgres:
    image: postgres:16.3-alpine
    container_name: peykan_postgres_dev
    environment:
      POSTGRES_DB: peykan
      POSTGRES_USER: peykan_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password_123}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
    ports:
      - "5432:5432"  # Expose for development access
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U peykan_user -d peykan"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - peykan_internal
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Redis - امن و بدون دسترسی بیرونی
  redis:
    image: redis:7.4-alpine
    container_name: peykan_redis_dev
    volumes:
      - redis_data_dev:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - redis_logs_dev:/var/log/redis
    command: ["redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "${REDIS_PASSWORD:-dev_redis_123}"]
    ports:
      - "6379:6379"  # Expose for development access
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-dev_redis_123}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - peykan_internal
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: peykan_backend_dev
    env_file:
      - ./backend/env.production.dev
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://peykan_user:${POSTGRES_PASSWORD:-dev_password_123}@postgres:5432/peykan
      - REDIS_URL=redis://:${REDIS_PASSWORD:-dev_redis_123}@redis:6379/1
      - DJANGO_SETTINGS_MODULE=peykan.settings_production
    volumes:
      - static_volume_dev:/app/staticfiles
      - media_volume_dev:/app/media
      - ./backend/logs:/app/logs
    ports:
      - "8000:8000"  # Expose for development access
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - peykan_internal
      - peykan_external
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: peykan_frontend_dev
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api/v1
      - NEXT_PUBLIC_SITE_URL=http://localhost:3000
      - NODE_ENV=production
    ports:
      - "3000:3000"  # Expose for development access
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - peykan_internal
      - peykan_external
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

  # Nginx Reverse Proxy - تنها سرویس با دسترسی بیرونی
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    container_name: peykan_nginx_dev
    ports:
      - "80:80"
    volumes:
      - nginx_logs_dev:/var/log/nginx
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - peykan_external

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  redis_logs_dev:
    driver: local
  static_volume_dev:
    driver: local
  media_volume_dev:
    driver: local
  nginx_logs_dev:
    driver: local

networks:
  peykan_internal:
    driver: bridge
    internal: false  # Allow internet access for development
  peykan_external:
    driver: bridge
