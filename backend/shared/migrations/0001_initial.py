# Generated by Django 5.2.6 on 2025-09-25 16:20

import django.db.models.deletion
import parler.fields
import parler.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutFeature',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icon')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'About Feature',
                'verbose_name_plural': 'About Features',
                'ordering': ['order'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AboutSection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('button_url', models.URLField(verbose_name='Button URL')),
                ('hero_image', models.ImageField(help_text='Main image for about section', upload_to='about/', verbose_name='Hero Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'About Section',
                'verbose_name_plural': 'About Section',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AboutStatistic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('value', models.CharField(max_length=50, verbose_name='Value')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icon')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'About Statistic',
                'verbose_name_plural': 'About Statistics',
                'ordering': ['order'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('banner_type', models.CharField(choices=[('homepage_top', 'Homepage Top'), ('homepage_bottom', 'Homepage Bottom'), ('tour_detail', 'Tour Detail Page'), ('event_detail', 'Event Detail Page'), ('seasonal', 'Seasonal Banner'), ('promotion', 'Promotional Banner'), ('sidebar', 'Sidebar Banner')], max_length=20, verbose_name='Banner Type')),
                ('position', models.CharField(choices=[('top', 'Top'), ('middle', 'Middle'), ('bottom', 'Bottom'), ('sidebar', 'Sidebar'), ('popup', 'Popup')], default='top', max_length=20, verbose_name='Position')),
                ('image', models.ImageField(help_text='Recommended size: 1200x400px for banners', upload_to='banners/', verbose_name='Banner Image')),
                ('mobile_image', models.ImageField(blank=True, help_text='Optional mobile-specific image', null=True, upload_to='banners/mobile/', verbose_name='Mobile Banner Image')),
                ('link_url', models.URLField(blank=True, verbose_name='Link URL')),
                ('link_target', models.CharField(choices=[('_self', 'Same Window'), ('_blank', 'New Window')], default='_self', max_length=20, verbose_name='Link Target')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('show_on_pages', models.JSONField(blank=True, default=list, help_text='List of page URLs or patterns where this banner should appear', verbose_name='Show on Pages')),
                ('show_for_authenticated', models.BooleanField(default=True, verbose_name='Show for Authenticated Users')),
                ('show_for_anonymous', models.BooleanField(default=True, verbose_name='Show for Anonymous Users')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='View Count')),
                ('click_count', models.PositiveIntegerField(default=0, verbose_name='Click Count')),
            ],
            options={
                'verbose_name': 'Banner',
                'verbose_name_plural': 'Banners',
                'ordering': ['display_order', 'created_at'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('company_name', models.CharField(max_length=200, verbose_name='Company Name')),
                ('address', models.TextField(verbose_name='Address')),
                ('phone_primary', models.CharField(max_length=20, verbose_name='Primary Phone')),
                ('phone_secondary', models.CharField(blank=True, max_length=20, verbose_name='Secondary Phone')),
                ('email_general', models.EmailField(max_length=254, verbose_name='General Email')),
                ('email_support', models.EmailField(blank=True, max_length=254, verbose_name='Support Email')),
                ('email_sales', models.EmailField(blank=True, max_length=254, verbose_name='Sales Email')),
                ('working_hours', models.CharField(default='9:00 AM - 6:00 PM', max_length=100, verbose_name='Working Hours')),
                ('working_days', models.CharField(default='Monday - Friday', max_length=100, verbose_name='Working Days')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('instagram_url', models.URLField(blank=True, verbose_name='Instagram')),
                ('telegram_url', models.URLField(blank=True, verbose_name='Telegram')),
                ('whatsapp_number', models.CharField(blank=True, max_length=20, verbose_name='WhatsApp Number')),
                ('facebook_url', models.URLField(blank=True, verbose_name='Facebook')),
                ('twitter_url', models.URLField(blank=True, verbose_name='Twitter')),
                ('linkedin_url', models.URLField(blank=True, verbose_name='LinkedIn')),
            ],
            options={
                'verbose_name': 'Contact Information',
                'verbose_name_plural': 'Contact Information',
                'db_table': 'shared_contact_info',
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('full_name', models.CharField(max_length=200, verbose_name='Full Name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone Number')),
                ('subject', models.CharField(max_length=200, verbose_name='Subject')),
                ('message', models.TextField(verbose_name='Message')),
                ('status', models.CharField(choices=[('new', 'New'), ('read', 'Read'), ('replied', 'Replied'), ('closed', 'Closed')], default='new', max_length=20, verbose_name='Status')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20, verbose_name='Priority')),
                ('admin_response', models.TextField(blank=True, verbose_name='Admin Response')),
                ('responded_at', models.DateTimeField(blank=True, null=True, verbose_name='Responded At')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
            ],
            options={
                'verbose_name': 'Contact Message',
                'verbose_name_plural': 'Contact Messages',
                'db_table': 'shared_contact_message',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CTAButton',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('url', models.URLField(verbose_name='URL')),
                ('button_type', models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('outline', 'Outline')], default='primary', max_length=20, verbose_name='Button Type')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'CTA Button',
                'verbose_name_plural': 'CTA Buttons',
                'ordering': ['order'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CTAButtonTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('text', models.CharField(max_length=100, verbose_name='Button Text')),
            ],
            options={
                'verbose_name': 'CTA Button Translation',
                'db_table': 'shared_ctabutton_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CTAFeature',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icon')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'CTA Feature',
                'verbose_name_plural': 'CTA Features',
                'ordering': ['order'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CTAFeatureTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('text', models.CharField(max_length=100, verbose_name='Feature Text')),
            ],
            options={
                'verbose_name': 'CTA Feature Translation',
                'db_table': 'shared_ctafeature_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CTASection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('background_image', models.ImageField(blank=True, null=True, upload_to='cta/', verbose_name='Background Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'CTA Section',
                'verbose_name_plural': 'CTA Section',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CTASectionTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('subtitle', models.CharField(max_length=300, verbose_name='Subtitle')),
                ('description', models.TextField(verbose_name='Description')),
            ],
            options={
                'verbose_name': 'CTA Section Translation',
                'db_table': 'shared_ctasection_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('question', models.CharField(max_length=500, verbose_name='Question')),
                ('answer', models.TextField(verbose_name='Answer')),
                ('keywords', models.CharField(blank=True, help_text='Keywords to help users find this FAQ', max_length=255, verbose_name='Search Keywords')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='View Count')),
                ('is_featured', models.BooleanField(default=False, help_text='Featured FAQs appear at the top', verbose_name='Is Featured')),
                ('is_published', models.BooleanField(default=True, verbose_name='Is Published')),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags for categorization', max_length=255, verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'db_table': 'shared_faq',
                'ordering': ['category__order', 'order', '-is_featured', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='FAQCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('icon', models.CharField(blank=True, help_text='CSS class for icon (e.g., fas fa-question-circle)', max_length=50, verbose_name='Icon Class')),
                ('color', models.CharField(default='#007bff', help_text='Hex color code for category', max_length=7, verbose_name='Color')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
            ],
            options={
                'verbose_name': 'FAQ Category',
                'verbose_name_plural': 'FAQ Categories',
                'db_table': 'shared_faq_category',
                'ordering': ['order', 'created_at'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FAQCategoryTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, verbose_name='Category Description')),
            ],
            options={
                'verbose_name': 'FAQ Category Translation',
                'db_table': 'shared_faq_category_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FAQSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('items_per_page', models.PositiveIntegerField(default=5, verbose_name='Items per page')),
                ('show_categories', models.BooleanField(default=True, verbose_name='Show categories')),
                ('show_search', models.BooleanField(default=True, verbose_name='Show search')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'FAQ Settings',
                'verbose_name_plural': 'FAQ Settings',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FAQSettingsTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(default='Frequently Asked Questions', max_length=200, verbose_name='Title')),
                ('subtitle', models.CharField(default='Find answers to common questions', max_length=300, verbose_name='Subtitle')),
            ],
            options={
                'verbose_name': 'FAQ Settings Translation',
                'db_table': 'shared_faqsettings_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Footer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='footer/', verbose_name='Company Logo')),
                ('default_phone', models.CharField(blank=True, max_length=20, verbose_name='Default Phone')),
                ('default_email', models.EmailField(blank=True, max_length=254, verbose_name='Default Email')),
                ('instagram_url', models.URLField(blank=True, verbose_name='Instagram')),
                ('telegram_url', models.URLField(blank=True, verbose_name='Telegram')),
                ('whatsapp_number', models.CharField(blank=True, max_length=20, verbose_name='WhatsApp')),
                ('facebook_url', models.URLField(blank=True, verbose_name='Facebook')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Footer',
                'verbose_name_plural': 'Footer',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FooterLink',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('url', models.URLField(verbose_name='URL')),
                ('link_type', models.CharField(choices=[('internal', 'Internal'), ('external', 'External')], default='internal', max_length=20, verbose_name='Link Type')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Footer Link',
                'verbose_name_plural': 'Footer Links',
                'ordering': ['order'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FooterLinkTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('label', models.CharField(max_length=100, verbose_name='Label')),
            ],
            options={
                'verbose_name': 'Footer Link Translation',
                'db_table': 'shared_footerlink_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FooterTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('newsletter_title', models.CharField(default='Newsletter', max_length=200, verbose_name='Newsletter Title')),
                ('newsletter_description', models.TextField(default='Get exclusive deals...', verbose_name='Newsletter Description')),
                ('company_name', models.CharField(default='Peykan Tourism', max_length=200, verbose_name='Company Name')),
                ('company_description', models.TextField(default='Your travel companion', verbose_name='Company Description')),
                ('copyright_text', models.CharField(default='© 2024 Peykan Tourism', max_length=200, verbose_name='Copyright Text')),
                ('newsletter_placeholder', models.CharField(default='Enter your email', max_length=200, verbose_name='Newsletter Placeholder')),
                ('trusted_by_text', models.CharField(default='Trusted by 50K+ travelers', max_length=200, verbose_name='Trusted By Text')),
            ],
            options={
                'verbose_name': 'Footer Translation',
                'db_table': 'shared_footer_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='HeroSlider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('desktop_image', models.ImageField(blank=True, help_text='Recommended size: 1920x1080px for desktop screens', null=True, upload_to='hero/desktop/', verbose_name='Desktop Image (1920x1080)')),
                ('tablet_image', models.ImageField(blank=True, help_text='Recommended size: 1024x768px for tablet screens', null=True, upload_to='hero/tablet/', verbose_name='Tablet Image (1024x768)')),
                ('mobile_image', models.ImageField(blank=True, help_text='Recommended size: 768x1024px for mobile screens', null=True, upload_to='hero/mobile/', verbose_name='Mobile Image (768x1024)')),
                ('video_type', models.CharField(choices=[('none', 'No Video'), ('file', 'Upload Video File'), ('url', 'External Video URL')], default='none', help_text='Choose whether to use a video file or external video URL', max_length=10, verbose_name='Video Type')),
                ('video_file', models.FileField(blank=True, help_text='Upload MP4, WebM, or OGV video file (max 50MB)', null=True, upload_to='hero/videos/', verbose_name='Video File')),
                ('video_url', models.URLField(blank=True, help_text='YouTube, Vimeo, or direct video URL', verbose_name='Video URL')),
                ('video_thumbnail', models.ImageField(blank=True, help_text='Custom thumbnail image for video (optional)', null=True, upload_to='hero/video_thumbnails/', verbose_name='Video Thumbnail')),
                ('autoplay_video', models.BooleanField(default=False, help_text='Automatically play video when slide is active', verbose_name='Autoplay Video')),
                ('video_muted', models.BooleanField(default=True, help_text='Start video muted (recommended for autoplay)', verbose_name='Video Muted')),
                ('show_video_controls', models.BooleanField(default=False, help_text='Show video player controls (play, pause, volume, etc.)', verbose_name='Show Video Controls')),
                ('video_loop', models.BooleanField(default=True, help_text='Loop video playback continuously', verbose_name='Loop Video')),
                ('button_url', models.URLField(verbose_name='Button URL')),
                ('button_type', models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('outline', 'Outline')], default='primary', max_length=20, verbose_name='Button Type')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('display_duration', models.PositiveIntegerField(default=5000, help_text='How long this slide should be displayed in milliseconds', verbose_name='Display Duration (ms)')),
                ('show_for_authenticated', models.BooleanField(default=True, verbose_name='Show for Authenticated Users')),
                ('show_for_anonymous', models.BooleanField(default=True, verbose_name='Show for Anonymous Users')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='View Count')),
                ('click_count', models.PositiveIntegerField(default=0, verbose_name='Click Count')),
            ],
            options={
                'verbose_name': 'Hero Slide',
                'verbose_name_plural': 'Hero Slides',
                'ordering': ['order', 'created_at'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='HeroSliderTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('subtitle', models.CharField(max_length=300, verbose_name='Subtitle')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('button_text', models.CharField(default='Learn More', max_length=50, verbose_name='Button Text')),
            ],
            options={
                'verbose_name': 'Hero Slide Translation',
                'db_table': 'shared_heroslider_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ImageOptimization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('original_image', models.ImageField(upload_to='originals/', verbose_name='Original Image')),
                ('image_type', models.CharField(choices=[('hero', 'Hero Image'), ('tour', 'Tour Image'), ('event', 'Event Image'), ('banner', 'Banner Image'), ('profile', 'Profile Image'), ('gallery', 'Gallery Image')], max_length=20, verbose_name='Image Type')),
                ('desktop_version', models.ImageField(blank=True, null=True, upload_to='optimized/desktop/', verbose_name='Desktop Version')),
                ('tablet_version', models.ImageField(blank=True, null=True, upload_to='optimized/tablet/', verbose_name='Tablet Version')),
                ('mobile_version', models.ImageField(blank=True, null=True, upload_to='optimized/mobile/', verbose_name='Mobile Version')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='optimized/thumbnail/', verbose_name='Thumbnail')),
                ('original_width', models.PositiveIntegerField(verbose_name='Original Width')),
                ('original_height', models.PositiveIntegerField(verbose_name='Original Height')),
                ('original_size', models.PositiveIntegerField(verbose_name='Original Size (bytes)')),
                ('quality_desktop', models.PositiveIntegerField(default=85, verbose_name='Desktop Quality')),
                ('quality_tablet', models.PositiveIntegerField(default=80, verbose_name='Tablet Quality')),
                ('quality_mobile', models.PositiveIntegerField(default=75, verbose_name='Mobile Quality')),
                ('optimized_size_desktop', models.PositiveIntegerField(default=0, verbose_name='Optimized Desktop Size')),
                ('optimized_size_tablet', models.PositiveIntegerField(default=0, verbose_name='Optimized Tablet Size')),
                ('optimized_size_mobile', models.PositiveIntegerField(default=0, verbose_name='Optimized Mobile Size')),
                ('optimization_completed', models.BooleanField(default=False, verbose_name='Optimization Completed')),
            ],
            options={
                'verbose_name': 'Image Optimization',
                'verbose_name_plural': 'Image Optimizations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('site_name', models.CharField(default='Peykan Tourism', max_length=100, verbose_name='Site Name')),
                ('site_description', models.TextField(blank=True, verbose_name='Site Description')),
                ('default_language', models.CharField(default='fa', max_length=10, verbose_name='Default Language')),
                ('default_phone', models.CharField(blank=True, max_length=20, verbose_name='Default Phone Number')),
                ('default_email', models.EmailField(blank=True, max_length=254, verbose_name='Default Email')),
                ('default_hero_image', models.ImageField(blank=True, help_text='Fallback image for hero section', null=True, upload_to='defaults/hero/', verbose_name='Default Hero Image')),
                ('default_tour_image', models.ImageField(blank=True, help_text='Fallback image for tours', null=True, upload_to='defaults/tours/', verbose_name='Default Tour Image')),
                ('default_event_image', models.ImageField(blank=True, help_text='Fallback image for events', null=True, upload_to='defaults/events/', verbose_name='Default Event Image')),
                ('default_meta_image', models.ImageField(blank=True, help_text='Default image for social media sharing', null=True, upload_to='defaults/meta/', verbose_name='Default Meta Image')),
                ('maintenance_mode', models.BooleanField(default=False, verbose_name='Maintenance Mode')),
                ('maintenance_message', models.TextField(blank=True, help_text='Message to show when site is in maintenance mode', verbose_name='Maintenance Message')),
                ('default_meta_title', models.CharField(blank=True, max_length=60, verbose_name='Default Meta Title')),
                ('default_meta_description', models.CharField(blank=True, max_length=160, verbose_name='Default Meta Description')),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='StaticPage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('page_type', models.CharField(choices=[('about', 'About Us'), ('terms', 'Terms & Conditions'), ('privacy', 'Privacy Policy'), ('faq', 'FAQ'), ('contact', 'Contact')], max_length=20, unique=True, verbose_name='Page Type')),
                ('image', models.ImageField(blank=True, null=True, upload_to='static_pages/', verbose_name='Page Image')),
                ('meta_description', models.TextField(blank=True, max_length=160, verbose_name='Meta Description')),
                ('meta_keywords', models.CharField(blank=True, max_length=255, verbose_name='Meta Keywords')),
            ],
            options={
                'verbose_name': 'Static Page',
                'verbose_name_plural': 'Static Pages',
                'db_table': 'shared_static_page',
                'ordering': ['page_type'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StaticPageTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('content', models.TextField(verbose_name='Content')),
                ('excerpt', models.TextField(blank=True, max_length=300, verbose_name='Excerpt')),
            ],
            options={
                'verbose_name': 'Static Page Translation',
                'db_table': 'shared_static_page_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SupportFAQ',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('category', models.CharField(choices=[('booking', 'Booking'), ('cancellation', 'Cancellation'), ('transfer', 'Transfer'), ('general', 'General Support')], max_length=20, verbose_name='Category')),
                ('question', models.CharField(max_length=500, verbose_name='Question')),
                ('whatsapp_message', models.TextField(help_text='Pre-filled message that will be sent to WhatsApp', verbose_name='WhatsApp Message')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Support FAQ',
                'verbose_name_plural': 'Support FAQs',
                'db_table': 'shared_support_faq',
                'ordering': ['category', 'order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransferBookingSection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('button_url', models.URLField(default='/transfers/booking', verbose_name='Button URL')),
                ('background_image', models.ImageField(blank=True, null=True, upload_to='transfer/', verbose_name='Background Image')),
                ('experience_years', models.PositiveIntegerField(default=20, verbose_name='Years of Experience')),
                ('countries_served', models.PositiveIntegerField(default=100, verbose_name='Countries Served')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Transfer Booking Section',
                'verbose_name_plural': 'Transfer Booking Section',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TransferBookingSectionTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('subtitle', models.CharField(max_length=300, verbose_name='Subtitle')),
                ('description', models.TextField(verbose_name='Description')),
                ('button_text', models.CharField(default='Book Transfer', max_length=50, verbose_name='Button Text')),
                ('feature_1', models.CharField(default='Luxury vehicles', max_length=100, verbose_name='Feature 1')),
                ('feature_2', models.CharField(default='Professional drivers', max_length=100, verbose_name='Feature 2')),
                ('feature_3', models.CharField(default='24/7 tracking', max_length=100, verbose_name='Feature 3')),
                ('feature_4', models.CharField(default='Complete safety', max_length=100, verbose_name='Feature 4')),
            ],
            options={
                'verbose_name': 'Transfer Booking Section Translation',
                'db_table': 'shared_transferbookingsection_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AboutFeatureTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='shared.aboutfeature')),
            ],
            options={
                'verbose_name': 'About Feature Translation',
                'db_table': 'shared_aboutfeature_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AboutSectionTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('subtitle', models.CharField(max_length=300, verbose_name='Subtitle')),
                ('description', models.TextField(verbose_name='Description')),
                ('button_text', models.CharField(default='Learn More', max_length=50, verbose_name='Button Text')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='shared.aboutsection')),
            ],
            options={
                'verbose_name': 'About Section Translation',
                'db_table': 'shared_aboutsection_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AboutStatisticTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('label', models.CharField(max_length=100, verbose_name='Label')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='shared.aboutstatistic')),
            ],
            options={
                'verbose_name': 'About Statistic Translation',
                'db_table': 'shared_aboutstatistic_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BannerTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('alt_text', models.CharField(max_length=200, verbose_name='Alt Text')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='shared.banner')),
            ],
            options={
                'verbose_name': 'Banner Translation',
                'db_table': 'shared_banner_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
