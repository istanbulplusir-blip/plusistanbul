# Generated by Django 5.2.6 on 2025-09-25 16:20

import django.core.validators
import parler.models
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CarRental',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/', verbose_name='Image')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Base price (USD)')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Currency')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Is featured')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Is popular')),
                ('is_special', models.BooleanField(default=False, help_text='Mark as special tour for premium display on homepage', verbose_name='Is special')),
                ('is_seasonal', models.BooleanField(default=False, help_text='Mark as seasonal tour (summer/winter specials, holidays, etc.)', verbose_name='Is seasonal')),
                ('brand', models.CharField(max_length=100, verbose_name='Brand')),
                ('model', models.CharField(max_length=100, verbose_name='Model')),
                ('year', models.PositiveIntegerField(verbose_name='Year')),
                ('seats', models.PositiveIntegerField(verbose_name='Number of seats')),
                ('fuel_type', models.CharField(choices=[('gasoline', 'Gasoline'), ('diesel', 'Diesel'), ('hybrid', 'Hybrid'), ('electric', 'Electric'), ('lpg', 'LPG')], max_length=20, verbose_name='Fuel type')),
                ('transmission', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic'), ('semi_automatic', 'Semi-automatic')], max_length=20, verbose_name='Transmission')),
                ('min_rent_days', models.PositiveIntegerField(default=1, verbose_name='Minimum rental days')),
                ('max_rent_days', models.PositiveIntegerField(default=365, verbose_name='Maximum rental days')),
                ('allow_hourly_rental', models.BooleanField(default=True, help_text='Allow rentals for less than 24 hours', verbose_name='Allow hourly rental')),
                ('min_rent_hours', models.PositiveIntegerField(default=8, help_text='Minimum rental period in hours (for same-day rentals)', verbose_name='Minimum rental hours')),
                ('max_hourly_rental_hours', models.PositiveIntegerField(default=23, help_text='Maximum hours for hourly rental (before switching to daily)', verbose_name='Maximum hourly rental hours')),
                ('mileage_limit_per_day', models.PositiveIntegerField(default=200, help_text='Daily mileage limit in kilometers', verbose_name='Mileage limit per day (km)')),
                ('deposit_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Deposit amount')),
                ('price_per_day', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price per day')),
                ('price_per_hour', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Price per hour')),
                ('weekly_discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))], verbose_name='Weekly discount (%)')),
                ('monthly_discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))], verbose_name='Monthly discount (%)')),
                ('pickup_location', models.CharField(max_length=255, verbose_name='Pickup location')),
                ('dropoff_location', models.CharField(max_length=255, verbose_name='Dropoff location')),
                ('pickup_instructions', models.TextField(blank=True, verbose_name='Pickup instructions')),
                ('dropoff_instructions', models.TextField(blank=True, verbose_name='Dropoff instructions')),
                ('allow_custom_pickup_location', models.BooleanField(default=True, help_text='Allow customers to choose custom pickup location', verbose_name='Allow custom pickup location')),
                ('allow_custom_dropoff_location', models.BooleanField(default=True, help_text='Allow customers to choose custom dropoff location', verbose_name='Allow custom dropoff location')),
                ('basic_insurance_included', models.BooleanField(default=True, verbose_name='Basic insurance included')),
                ('comprehensive_insurance_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Comprehensive insurance price per day')),
                ('is_available', models.BooleanField(default=True, verbose_name='Is available')),
                ('advance_booking_days', models.PositiveIntegerField(default=30, help_text='How many days in advance can this car be booked', verbose_name='Advance booking days')),
            ],
            options={
                'verbose_name': 'Car Rental',
                'verbose_name_plural': 'Car Rentals',
                'ordering': ['-created_at'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CarRentalAvailability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('start_date', models.DateField(verbose_name='Start date')),
                ('end_date', models.DateField(verbose_name='End date')),
                ('is_available', models.BooleanField(default=True, verbose_name='Is available')),
                ('max_quantity', models.PositiveIntegerField(default=1, help_text='Maximum number of cars available for this period', verbose_name='Maximum quantity')),
                ('booked_quantity', models.PositiveIntegerField(default=0, verbose_name='Booked quantity')),
                ('price_override', models.DecimalField(blank=True, decimal_places=2, help_text='Override default daily price for this period', max_digits=10, null=True, verbose_name='Price override')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
            ],
            options={
                'verbose_name': 'Car Rental Availability',
                'verbose_name_plural': 'Car Rental Availability',
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='CarRentalBooking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('booking_date', models.DateField(verbose_name='Booking date')),
                ('booking_time', models.TimeField(verbose_name='Booking time')),
                ('participants_count', models.PositiveIntegerField(default=1, verbose_name='Participants count')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Unit price')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total price')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Currency')),
                ('booking_reference', models.CharField(max_length=20, unique=True, verbose_name='Booking reference')),
                ('pickup_date', models.DateField(verbose_name='Pickup date')),
                ('dropoff_date', models.DateField(verbose_name='Dropoff date')),
                ('pickup_time', models.TimeField(verbose_name='Pickup time')),
                ('dropoff_time', models.TimeField(verbose_name='Dropoff time')),
                ('pickup_location_type', models.CharField(choices=[('predefined', 'Predefined Location'), ('custom', 'Custom Location')], default='predefined', max_length=20, verbose_name='Pickup location type')),
                ('pickup_location_custom', models.CharField(blank=True, max_length=255, verbose_name='Custom pickup location')),
                ('pickup_location_coordinates', models.JSONField(blank=True, default=dict, help_text='Latitude and longitude for custom pickup location', verbose_name='Pickup location coordinates')),
                ('dropoff_location_type', models.CharField(choices=[('predefined', 'Predefined Location'), ('custom', 'Custom Location'), ('same_as_pickup', 'Same as Pickup')], default='same_as_pickup', max_length=20, verbose_name='Dropoff location type')),
                ('dropoff_location_custom', models.CharField(blank=True, max_length=255, verbose_name='Custom dropoff location')),
                ('dropoff_location_coordinates', models.JSONField(blank=True, default=dict, help_text='Latitude and longitude for custom dropoff location', verbose_name='Dropoff location coordinates')),
                ('total_days', models.PositiveIntegerField(verbose_name='Total days')),
                ('total_hours', models.PositiveIntegerField(default=0, verbose_name='Total hours')),
                ('daily_rate', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Daily rate')),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Hourly rate')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Base price')),
                ('options_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Options total')),
                ('insurance_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Insurance total')),
                ('deposit_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Deposit amount')),
                ('driver_name', models.CharField(max_length=255, verbose_name='Driver name')),
                ('driver_license', models.CharField(max_length=50, verbose_name='Driver license number')),
                ('driver_phone', models.CharField(max_length=20, verbose_name='Driver phone')),
                ('driver_email', models.EmailField(max_length=254, verbose_name='Driver email')),
                ('additional_drivers', models.JSONField(blank=True, default=list, verbose_name='Additional drivers')),
                ('selected_options', models.JSONField(blank=True, default=list, verbose_name='Selected options')),
                ('basic_insurance', models.BooleanField(default=True, verbose_name='Basic insurance')),
                ('comprehensive_insurance', models.BooleanField(default=False, verbose_name='Comprehensive insurance')),
                ('special_requirements', models.TextField(blank=True, verbose_name='Special requirements')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('picked_up', 'Picked Up'), ('returned', 'Returned'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='pending', max_length=20, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Car Rental Booking',
                'verbose_name_plural': 'Car Rental Bookings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CarRentalCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Sort order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
            ],
            options={
                'verbose_name': 'Car Rental Category',
                'verbose_name_plural': 'Car Rental Categories',
                'ordering': ['sort_order', 'id'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CarRentalCategoryTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Car Rental Category Translation',
                'db_table': 'car_rentals_carrentalcategory_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CarRentalImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('image', models.ImageField(upload_to='car_rentals/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, max_length=255, verbose_name='Caption')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Sort order')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Is primary image')),
            ],
            options={
                'verbose_name': 'Car Rental Image',
                'verbose_name_plural': 'Car Rental Images',
                'ordering': ['sort_order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='CarRentalLocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('location_type', models.CharField(choices=[('airport', 'Airport'), ('hotel', 'Hotel'), ('station', 'Train/Bus Station'), ('city_center', 'City Center'), ('port', 'Port'), ('other', 'Other')], default='other', max_length=20, verbose_name='Location type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Sort order')),
                ('operating_hours_start', models.TimeField(blank=True, null=True, verbose_name='Operating hours start')),
                ('operating_hours_end', models.TimeField(blank=True, null=True, verbose_name='Operating hours end')),
            ],
            options={
                'verbose_name': 'Car Rental Location',
                'verbose_name_plural': 'Car Rental Locations',
                'ordering': ['sort_order', 'id'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CarRentalLocationTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=255, verbose_name='Location name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('address', models.TextField(verbose_name='Address')),
            ],
            options={
                'verbose_name': 'Car Rental Location Translation',
                'db_table': 'car_rentals_carrentallocation_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CarRentalOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('option_type', models.CharField(choices=[('gps', 'GPS Navigation'), ('baby_seat', 'Baby Seat'), ('child_seat', 'Child Seat'), ('driver_service', 'Driver Service'), ('additional_driver', 'Additional Driver'), ('roof_rack', 'Roof Rack'), ('bike_rack', 'Bike Rack'), ('winter_tires', 'Winter Tires'), ('premium_insurance', 'Premium Insurance'), ('roadside_assistance', 'Roadside Assistance')], max_length=30, verbose_name='Option type')),
                ('price_type', models.CharField(choices=[('fixed', 'Fixed Amount'), ('daily', 'Per Day'), ('percentage', 'Percentage of Base Price')], default='daily', max_length=20, verbose_name='Price type')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Price')),
                ('price_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))], verbose_name='Price percentage')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Currency')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('max_quantity', models.PositiveIntegerField(default=1, help_text='Maximum number of this option that can be selected', verbose_name='Maximum quantity')),
            ],
            options={
                'verbose_name': 'Car Rental Option',
                'verbose_name_plural': 'Car Rental Options',
                'ordering': ['option_type', 'id'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CarRentalOptionTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Car Rental Option Translation',
                'db_table': 'car_rentals_carrentaloption_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CarRentalTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('short_description', models.TextField(max_length=500, verbose_name='Short description')),
                ('highlights', models.TextField(blank=True, verbose_name='Highlights')),
                ('rules', models.TextField(blank=True, verbose_name='Rules and regulations')),
                ('required_items', models.TextField(blank=True, verbose_name='Required items')),
            ],
            options={
                'verbose_name': 'Car Rental Translation',
                'db_table': 'car_rentals_carrental_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
