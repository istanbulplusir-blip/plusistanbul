# Generated by Django 5.2.6 on 2025-09-25 16:20

import django.core.validators
import parler.models
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ReviewReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('reason', models.CharField(choices=[('inappropriate', 'Inappropriate Content'), ('spam', 'Spam or Advertisement'), ('fake', 'Fake or Misleading'), ('harassment', 'Harassment or Bullying'), ('copyright', 'Copyright Violation'), ('other', 'Other')], max_length=20, verbose_name='Report Reason')),
                ('description', models.TextField(blank=True, verbose_name='Additional Details')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('investigating', 'Under Investigation'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed'), ('escalated', 'Escalated to Admin')], default='pending', max_length=20, verbose_name='Status')),
                ('moderated_at', models.DateTimeField(blank=True, null=True, verbose_name='Moderated At')),
                ('moderation_notes', models.TextField(blank=True, verbose_name='Moderation Notes')),
                ('action_taken', models.CharField(blank=True, max_length=100, verbose_name='Action Taken')),
            ],
            options={
                'verbose_name': 'Review Report',
                'verbose_name_plural': 'Review Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('content', models.TextField(verbose_name='Response Content')),
                ('is_public', models.BooleanField(default=True, verbose_name='Public Response')),
                ('is_official', models.BooleanField(default=False, verbose_name='Official Response')),
            ],
            options={
                'verbose_name': 'Review Response',
                'verbose_name_plural': 'Review Responses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/', verbose_name='Image')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Base price (USD)')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Currency')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Is featured')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Is popular')),
                ('tour_type', models.CharField(choices=[('day', 'Day tour'), ('night', 'Night tour')], default='day', max_length=10, verbose_name='Tour type')),
                ('transport_type', models.CharField(choices=[('boat', 'Boat'), ('land', 'Land'), ('air', 'Air')], default='land', max_length=10, verbose_name='Transport type')),
                ('duration_hours', models.PositiveIntegerField(verbose_name='Duration (hours)')),
                ('pickup_time', models.TimeField(verbose_name='Pickup time')),
                ('start_time', models.TimeField(verbose_name='Start time')),
                ('end_time', models.TimeField(verbose_name='End time')),
                ('min_participants', models.PositiveIntegerField(default=1, verbose_name='Minimum participants')),
                ('max_participants', models.PositiveIntegerField(verbose_name='Maximum participants')),
                ('booking_cutoff_hours', models.PositiveIntegerField(default=8, verbose_name='Booking cutoff (hours)')),
                ('cancellation_hours', models.PositiveIntegerField(default=48, verbose_name='Cancellation hours')),
                ('refund_percentage', models.PositiveIntegerField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Refund percentage')),
                ('includes_transfer', models.BooleanField(default=True, verbose_name='Includes transfer')),
                ('includes_guide', models.BooleanField(default=True, verbose_name='Includes guide')),
                ('includes_meal', models.BooleanField(default=True, verbose_name='Includes meal')),
                ('includes_photographer', models.BooleanField(default=False, verbose_name='Includes photographer')),
                ('is_special', models.BooleanField(default=False, help_text='Mark as special tour for premium display on homepage', verbose_name='Is special')),
                ('is_seasonal', models.BooleanField(default=False, help_text='Mark as seasonal tour (summer/winter specials, holidays, etc.)', verbose_name='Is seasonal')),
            ],
            options={
                'verbose_name': 'Tour',
                'verbose_name_plural': 'Tours',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TourBooking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('booking_date', models.DateField(verbose_name='Booking date')),
                ('booking_time', models.TimeField(verbose_name='Booking time')),
                ('participants_count', models.PositiveIntegerField(default=1, verbose_name='Participants count')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Unit price')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total price')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Currency')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='pending', max_length=20, verbose_name='Status')),
                ('booking_reference', models.CharField(max_length=20, unique=True, verbose_name='Booking reference')),
                ('adult_count', models.PositiveIntegerField(default=0, verbose_name='Adult count')),
                ('child_count', models.PositiveIntegerField(default=0, verbose_name='Child count')),
                ('infant_count', models.PositiveIntegerField(default=0, verbose_name='Infant count')),
                ('adult_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Adult price')),
                ('child_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Child price')),
                ('infant_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Infant price')),
                ('selected_options', models.JSONField(default=list, verbose_name='Selected options')),
                ('options_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Options total')),
                ('special_requirements', models.TextField(blank=True, verbose_name='Special requirements')),
            ],
            options={
                'verbose_name': 'Tour Booking',
                'verbose_name_plural': 'Tour Bookings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TourCancellationPolicy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('hours_before', models.PositiveIntegerField(help_text='Number of hours before tour start when this policy applies', verbose_name='Hours before tour start')),
                ('refund_percentage', models.PositiveIntegerField(help_text='Percentage of refund for cancellations within this time frame', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Refund percentage')),
                ('description', models.TextField(blank=True, help_text='Human-readable description of this policy', verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
            ],
            options={
                'verbose_name': 'Tour Cancellation Policy',
                'verbose_name_plural': 'Tour Cancellation Policies',
                'ordering': ['-hours_before'],
            },
        ),
        migrations.CreateModel(
            name='TourCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icon')),
                ('color', models.CharField(default='#007bff', max_length=7, verbose_name='Color')),
            ],
            options={
                'verbose_name': 'Tour Category',
                'verbose_name_plural': 'Tour Categories',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TourCategoryTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Tour Category Translation',
                'db_table': 'tours_tourcategory_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TourGallery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('image', models.ImageField(upload_to='tours/gallery/', verbose_name='Image')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Image Title')),
                ('description', models.TextField(blank=True, verbose_name='Image Description')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Tour Gallery Image',
                'verbose_name_plural': 'Tour Gallery Images',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='TourItinerary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('order', models.PositiveIntegerField(verbose_name='Order')),
                ('duration_minutes', models.PositiveIntegerField(verbose_name='Duration (minutes)')),
                ('location', models.CharField(max_length=255, verbose_name='Location')),
                ('image', models.ImageField(blank=True, null=True, upload_to='itinerary/', verbose_name='Image')),
                ('coordinates', models.JSONField(blank=True, null=True, verbose_name='Coordinates')),
            ],
            options={
                'verbose_name': 'Tour Itinerary',
                'verbose_name_plural': 'Tour Itinerary',
                'ordering': ['order'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TourItineraryTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Tour Itinerary Translation',
                'db_table': 'tours_touritinerary_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TourOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Currency')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('option_type', models.CharField(choices=[('service', 'Service'), ('equipment', 'Equipment'), ('food', 'Food'), ('transport', 'Transport')], default='service', max_length=20, verbose_name='Option type')),
                ('price_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Price percentage')),
                ('is_available', models.BooleanField(default=True, verbose_name='Is available')),
                ('max_quantity', models.PositiveIntegerField(default=1, verbose_name='Maximum quantity')),
            ],
            options={
                'verbose_name': 'Tour Option',
                'verbose_name_plural': 'Tour Options',
            },
        ),
        migrations.CreateModel(
            name='TourPricing',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('age_group', models.CharField(choices=[('infant', 'Infant (0-2)'), ('child', 'Child (2-10)'), ('adult', 'Adult (11+)')], max_length=10, verbose_name='Age group')),
                ('factor', models.DecimalField(decimal_places=2, default=1.0, max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('2.00'))], verbose_name='Price factor')),
                ('is_free', models.BooleanField(default=False, verbose_name='Is free')),
                ('requires_services', models.BooleanField(default=True, verbose_name='Requires services')),
            ],
            options={
                'verbose_name': 'Tour Pricing',
                'verbose_name_plural': 'Tour Pricing',
            },
        ),
        migrations.CreateModel(
            name='TourReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Rating')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('comment', models.TextField(verbose_name='Comment')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Is verified')),
                ('is_helpful', models.PositiveIntegerField(default=0, verbose_name='Helpful votes')),
                ('status', models.CharField(choices=[('pending', 'Pending Moderation'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('flagged', 'Flagged for Review')], default='pending', max_length=20, verbose_name='Status')),
                ('moderation_notes', models.TextField(blank=True, verbose_name='Moderation Notes')),
                ('moderated_at', models.DateTimeField(blank=True, null=True, verbose_name='Moderated At')),
                ('category', models.CharField(choices=[('general', 'General'), ('quality', 'Quality'), ('price', 'Price'), ('service', 'Service'), ('experience', 'Experience')], default='general', max_length=20, verbose_name='Category')),
                ('sentiment_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Sentiment Score')),
            ],
            options={
                'verbose_name': 'Tour Review',
                'verbose_name_plural': 'Tour Reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TourSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('start_date', models.DateField(verbose_name='Start date')),
                ('end_date', models.DateField(verbose_name='End date')),
                ('start_time', models.TimeField(verbose_name='Start time')),
                ('end_time', models.TimeField(verbose_name='End time')),
                ('is_available', models.BooleanField(default=True, verbose_name='Is available')),
                ('day_of_week', models.PositiveIntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], verbose_name='Day of week')),
                ('availability_override', models.BooleanField(default=False, verbose_name='Override availability')),
                ('availability_note', models.CharField(blank=True, max_length=255, verbose_name='Availability Note')),
                ('total_reserved_capacity', models.PositiveIntegerField(default=0, help_text='Total capacity currently reserved in carts and pending orders', verbose_name='Total Reserved Capacity')),
                ('total_confirmed_capacity', models.PositiveIntegerField(default=0, help_text='Total capacity confirmed in paid orders', verbose_name='Total Confirmed Capacity')),
                ('price_adjustment', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Price Adjustment')),
                ('price_adjustment_type', models.CharField(choices=[('fixed', 'Fixed Amount'), ('percentage', 'Percentage')], default='fixed', max_length=10, verbose_name='Adjustment Type')),
                ('variant_capacities_raw', models.JSONField(blank=True, default=dict, help_text='Legacy field - will be removed after migration to relational model', null=True, verbose_name='Variant capacities (Legacy)')),
            ],
            options={
                'verbose_name': 'Tour Schedule',
                'verbose_name_plural': 'Tour Schedules',
            },
        ),
        migrations.CreateModel(
            name='TourScheduleVariantCapacity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('total_capacity', models.PositiveIntegerField(help_text='Maximum capacity for this variant on this schedule', verbose_name='Total Capacity')),
                ('reserved_capacity', models.PositiveIntegerField(default=0, help_text='Capacity currently reserved in carts and pending orders', verbose_name='Reserved Capacity')),
                ('confirmed_capacity', models.PositiveIntegerField(default=0, help_text='Capacity confirmed in paid orders', verbose_name='Confirmed Capacity')),
                ('price_adjustment', models.DecimalField(decimal_places=2, default=0, help_text='Additional price adjustment for this variant on this schedule', max_digits=10, verbose_name='Price Adjustment')),
                ('price_adjustment_type', models.CharField(choices=[('fixed', 'Fixed Amount'), ('percentage', 'Percentage')], default='fixed', max_length=10, verbose_name='Adjustment Type')),
                ('is_available', models.BooleanField(default=True, help_text='Whether this variant is available for this schedule', verbose_name='Available')),
                ('availability_note', models.CharField(blank=True, help_text='Optional note about availability (e.g., "Few seats left")', max_length=255, verbose_name='Availability Note')),
            ],
            options={
                'verbose_name': 'Schedule Variant Capacity',
                'verbose_name_plural': 'Schedule Variant Capacities',
                'ordering': ['schedule', 'variant__name'],
            },
        ),
        migrations.CreateModel(
            name='TourTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('short_description', models.TextField(max_length=500, verbose_name='Short description')),
                ('highlights', models.TextField(blank=True, verbose_name='Highlights')),
                ('rules', models.TextField(blank=True, verbose_name='Rules and regulations')),
                ('required_items', models.TextField(blank=True, verbose_name='Required items')),
            ],
            options={
                'verbose_name': 'Tour Translation',
                'db_table': 'tours_tour_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TourVariant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('price_modifier', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Price modifier')),
                ('capacity', models.PositiveIntegerField(verbose_name='Capacity')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('base_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Base price (USD)')),
                ('includes_transfer', models.BooleanField(default=True, verbose_name='Includes transfer')),
                ('includes_guide', models.BooleanField(default=True, verbose_name='Includes guide')),
                ('includes_meal', models.BooleanField(default=True, verbose_name='Includes meal')),
                ('includes_photographer', models.BooleanField(default=False, verbose_name='Includes photographer')),
                ('extended_hours', models.PositiveIntegerField(default=0, verbose_name='Extended hours')),
                ('private_transfer', models.BooleanField(default=False, verbose_name='Private transfer')),
                ('expert_guide', models.BooleanField(default=False, verbose_name='Expert guide')),
                ('special_meal', models.BooleanField(default=False, verbose_name='Special meal')),
            ],
            options={
                'verbose_name': 'Tour Variant',
                'verbose_name_plural': 'Tour Variants',
            },
        ),
    ]
