# Generated by Django 5.0.2 on 2025-08-22 01:09

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tours', '0008_tourreview_category_tourreview_moderated_at_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReviewReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('reason', models.CharField(choices=[('inappropriate', 'Inappropriate Content'), ('spam', 'Spam or Advertisement'), ('fake', 'Fake or Misleading'), ('harassment', 'Harassment or Bullying'), ('copyright', 'Copyright Violation'), ('other', 'Other')], max_length=20, verbose_name='Report Reason')),
                ('description', models.TextField(blank=True, verbose_name='Additional Details')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('investigating', 'Under Investigation'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed'), ('escalated', 'Escalated to Admin')], default='pending', max_length=20, verbose_name='Status')),
                ('moderated_at', models.DateTimeField(blank=True, null=True, verbose_name='Moderated At')),
                ('moderation_notes', models.TextField(blank=True, verbose_name='Moderation Notes')),
                ('action_taken', models.CharField(blank=True, max_length=100, verbose_name='Action Taken')),
                ('moderated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_reports', to=settings.AUTH_USER_MODEL, verbose_name='Moderated By')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_reports', to=settings.AUTH_USER_MODEL, verbose_name='Reporter')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='tours.tourreview', verbose_name='Review')),
            ],
            options={
                'verbose_name': 'Review Report',
                'verbose_name_plural': 'Review Reports',
                'ordering': ['-created_at'],
                'unique_together': {('review', 'reporter')},
            },
        ),
        migrations.CreateModel(
            name='ReviewResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('content', models.TextField(verbose_name='Response Content')),
                ('is_public', models.BooleanField(default=True, verbose_name='Public Response')),
                ('is_official', models.BooleanField(default=False, verbose_name='Official Response')),
                ('responder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_responses', to=settings.AUTH_USER_MODEL, verbose_name='Responder')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='tours.tourreview', verbose_name='Review')),
            ],
            options={
                'verbose_name': 'Review Response',
                'verbose_name_plural': 'Review Responses',
                'ordering': ['-created_at'],
                'unique_together': {('review', 'responder')},
            },
        ),
    ]
